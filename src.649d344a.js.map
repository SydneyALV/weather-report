{"version":3,"sources":["src/index.js"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","_typeof","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","console","log","findLatitudeAndLongitude","_ref","_callee","city","latitude","longitude","response","_callee$","_context","axios","get","params","q","data","lat","lon","t0","_x","findTemp","_ref2","_callee2","cityname","_yield$findLatitudeAn","_callee2$","_context2","cityName","current_temp","main","temp","tempNumber","document","getElementById","textContent","convertFahrenheit","changeColorTemp","changeLandscape","Math","floor","changeCityName","cityNameBox","cityInputContent","resetCityToAtlanta","initialTemp","decreaseTemp","increaseTemp","celsius","querySelector","fahrenheit","tempF","classList","contains","landscape","changeSky","_ref3","target","sky","skyBackground","registerEvents","addEventListener","remove","add","convertCelsius"],"mappings":"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","file":"src.649d344a.js","sourceRoot":"..","sourcesContent":["console.log('New Index');\n//========= LocationIQ API =========\\\\\nconst findLatitudeAndLongitude = async (city) => {\n    let latitude, longitude;\n    try {\n        const response = await axios.get('https://weather-report-proxy-server-jk7z.onrender.com/location',\n        {\n            params: {\n                q: city,\n            }\n        });\n\n        latitude = response.data[0].lat;\n        longitude = response.data[0].lon;\n        return { latitude, longitude };\n    } catch (err) {\n        console.log(err)\n    }\n}\n\n//========= OpenWeather API =========\\\\\nconst findTemp = async () => {\n    const cityname = state.cityName\n    const {latitude, longitude} = await findLatitudeAndLongitude(cityname)\n    \n    try {\n        const response = await axios.get('https://weather-report-proxy-server-jk7z.onrender.com/weather', {\n            params: {\n                \"lat\": latitude,\n                \"lon\": longitude,\n            }\n        })\n        current_temp = response.data.main.temp; // in kelvin\n        tempNumber = document.getElementById(\"temp-number\");\n        tempNumber.textContent = convertFahrenheit(current_temp);\n        state.tempNumber = convertFahrenheit(current_temp);\n        changeColorTemp()\n        changeLandscape()\n    } catch (error) {\n        console.log(error, \"Temperature could not be found.\")\n    }\n}\n\nconst convertFahrenheit = (temp) => {\n    return Math.floor((temp - 273.15) * 9/5 + 32);\n}\n\n//========= State =========\\\\\nconst state = {\n    tempNumber: null,\n    cityName: \"Atlanta\",\n}\n\n//========= Select City Tile =========\\\\\nconst changeCityName = () => {\n    let cityNameBox = document.getElementById(\"city-title\")\n    let cityInput = document.getElementById(\"city-input\")\n    let cityInputContent = cityInput.value\n    state.cityName = cityInputContent\n    cityNameBox.textContent = cityInputContent\n};\n\nconst resetCityToAtlanta = () => {\n    const reset_city = document.getElementById(\"city-title\")\n    reset_city.textContent = \"Atlanta\"\n};\n\n\n//========= Temperature Tile =========\\\\\nconst initialTemp = () => {\n    const temp = document.getElementById(\"temp-number\")\n    temp.textContent = state.tempNumber;\n    changeColorTemp()\n    changeLandscape()\n}\n\nconst decreaseTemp = () => {\n    const temp = document.getElementById(\"temp-number\")\n    temp.textContent = state.tempNumber -= 1;\n    changeColorTemp()\n    changeLandscape()\n}\n\nconst increaseTemp = () => {\n    const temp = document.getElementById(\"temp-number\")\n    temp.textContent = state.tempNumber += 1;\n    changeColorTemp()\n    changeLandscape()\n}\n\nlet celsius = document.querySelector('#celsius')\nlet fahrenheit = document.querySelector('#fahrenheit')\nlet tempF = 0;    \n\nconst changeColorTemp = () => {\n    const temp = document.querySelector(\"#temp-number\")\n    \n    if (celsius.classList.contains('active')) {\n        tempF = Math.floor((state.tempNumber * 9/5) + 32);\n    } else if (fahrenheit.classList.contains('active')) {\n        tempF = state.tempNumber;\n    }\n\n    if (tempF >= 80) {\n        temp.classList = [\"red\"]\n    } else if (tempF >= 70 && tempF <= 79) {\n        temp.classList = [\"orange\"]\n    } else if (tempF >= 60 && tempF <= 69) {\n        temp.classList = [\"yellow\"]\n    } else if (tempF >= 50 && tempF <= 59) {\n        temp.classList = [\"green\"]\n    } else if (tempF <= 49) {\n        temp.classList = [\"teal\"]\n    }\n};\n\n\n//========= Weather Garden =========\\\\\nconst changeLandscape = () => {\n\n    if (celsius.classList.contains('active')) {\n        tempF = Math.floor((state.tempNumber * 9/5) + 32);\n    } else if (fahrenheit.classList.contains('active')) {\n        tempF = state.tempNumber;\n    }\n    \n    const landscape = document.getElementById(\"landscape\")\n    if (tempF >= 80) {\n        landscape.textContent = \"🌵  🐍 🦂 🌵🌵  🐍 🏜 🦂\"\n    } else if (tempF >= 70 && tempF <= 79) {\n        landscape.textContent = \"🌸🌿🌼 🌷🌻🌿 ☘️🌱 🌻🌷\"\n    } else if (tempF >= 60 && tempF <= 69) {\n        landscape.textContent = \"🌾🌾 🍃 🪨  🛤 🌾🌾🌾 🍃\"\n    } else if (tempF <= 59) {\n        landscape.textContent = \"🌲🌲⛄️🌲⛄️🍂🌲🍁🌲🌲⛄️🍂🌲\"\n    }\n};\n\nconst changeSky = ({ target: { value } }) => {\n    const sky = document.getElementById(\"sky\")\n    const skyBackground = document.getElementById(\"sky-gradient\")\n    if (value == \"Sunny\") {\n        sky.textContent = \"☁️ ☁️ ☁️ ☀️ ☁️ ☁️\"\n        skyBackground.classList = ['sunny']\n    } else if (value == \"Cloudy\") {\n        sky.textContent = \"☁️☁️ ☁️ ☁️☁️ ☁️ 🌤 ☁️ ☁️☁️\"\n        skyBackground.classList = ['cloudy']\n    } else if (value == \"Rainy\") {\n        sky.textContent = \"🌧🌈⛈🌧🌧💧⛈🌧🌦🌧💧🌧🌧\"\n        skyBackground.classList = ['rainy']\n    } else if (value == \"Snowy\") {\n        sky.textContent = \"🌨❄️🌨🌨❄️❄️🌨❄️🌨❄️❄️🌨🌨\"\n        skyBackground.classList = ['snowy']\n    }\n};\n\n//========= Registered Events =========\\\\\nconst registerEvents = () => {\n    initialTemp()\n    //========= Select City Tile =========\\\\\n    const cityTitle = document.querySelector(\"#city-input\")\n    cityTitle.addEventListener(\"input\", changeCityName)\n    const resetButton = document.getElementById(\"reset-button\")\n    resetButton.addEventListener(\"click\", resetCityToAtlanta)\n    //========= Temperature Tile =========\\\\\n    const decreaseButton = document.getElementById(\"decrease-button\");\n    decreaseButton.addEventListener(\"click\", decreaseTemp)\n    const increaseButton = document.getElementById(\"increase-button\");\n    increaseButton.addEventListener(\"click\", increaseTemp)\n    const searchCity = document.getElementById(\"real-temp-button\")\n    searchCity.addEventListener(\"click\", findTemp)\n    const celsius = document.getElementById('celsius')\n    const fahrenheit = document.getElementById('fahrenheit')\n    celsius.addEventListener('click', () => {    \n        if (celsius.classList.contains('active')) {\n            return\n        }\n        fahrenheit.classList.remove('active')\n        celsius.classList.add('active')\n        convertCelsius()\n    });\n    fahrenheit.addEventListener('click', () => {\n        if (fahrenheit.classList.contains('active')) {\n            return\n        }\n        celsius.classList.remove('active')\n        fahrenheit.classList.add('active')\n        convertFahrenheit()\n    });    \n    //========= Select Sky Tile =========\\\\\n    const skySelect = document.getElementById(\"sky-selector\")\n    skySelect.addEventListener(\"change\", changeSky)\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", registerEvents)\n"]}